name: ghcr images 

on:
    workflow_dispatch: 
    push: 
        branches: 
            - 'main'
            - 'feature/*'
env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{vars.MONGO_USERNAME}}
    MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}
jobs:
    unit-testing:
        name: unit testing
        strategy:
          matrix:
            nodejs_version: [18]
            os: [ubuntu-latest]
        runs-on: ${{matrix.os}}
        services:
          mongo-db:
            image: mongo
            ports:
              - 27017:27017
            env:
              MONGO_URI: 'mongodb+srv://localhost:27017/superData'
              MONGO_USERNAME: non-prod-user
              MONGO_PASSWORD: non-prod-password
        steps:
            - name: checkout repository
              uses: actions/checkout@v1
            - name: setup node ${{matrix.nodejs_version}}
              uses: actions/setup-node@v3
              with:
                node-version: ${{matrix.nodejs_version}}
            - name: Cache node modules
              id: cache-npm
              uses: actions/cache@v3
              env:
                cache-name: cache-node-modules
              with:
                # npm cache files are stored in `~/.npm` on Linux/macOS
                path: ~/.npm
                key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                
            - run: npm install
            - run: npm test
              id: run_test_on_nodejs
              continue-on-error: true

            - name: upload artifact
              uses: actions/upload-artifact@v3
              with:
                name: mocha-test-result
                path: test-results.xml
              if: always()
    code_coverage:
      name: code coverage
      runs-on: ubuntu-latest
      steps:
          - name: checkout repository
            uses: actions/checkout@v1
          - name: setup node 18
            uses: actions/setup-node@v3
            with:
              node-version: 18
          - run: npm install
          - run: npm run coverage
            continue-on-error: true
          - name: archive coverage
            uses: actions/upload-artifact@v3
            with:
              name: code-coverage-archive
              path: coverage
              retention-days: 5

    containersation:
      permissions:
        packages: write
      env:
        ghcr_registry: "ghcr.io"
      needs: [unit-testing, code_coverage]
      name: docker login
      runs-on: ubuntu-latest
      steps:
          - name: checkout repository
            uses: actions/checkout@v1

# docker login
          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}

          - name: Build and push
            uses: docker/build-push-action@v5
            with:
              context: .
              push: true
              tags: gharbi1936/k8s:app-${{github.sha}}

# ghcr login
          - name: Login to GHCR
            uses: docker/login-action@v3
            with:
              username: ${{ github.repository_owner }}
              password: ${{ github.token }}
              registry: ${{env.ghcr_registry}}

          - name: Build and push
            uses: docker/build-push-action@v5
            with:
              context: .
              push: true
              tags: ${{env.ghcr_registry}}/${{github.repository}}:app-${{github.sha}}


